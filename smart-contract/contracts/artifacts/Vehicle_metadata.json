{
	"compiler": {
		"version": "0.8.18+commit.87f61d96"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"inputs": [
					{
						"components": [
							{
								"internalType": "string",
								"name": "ownerFullName",
								"type": "string"
							},
							{
								"internalType": "string",
								"name": "ownerAddress",
								"type": "string"
							},
							{
								"internalType": "string",
								"name": "brand",
								"type": "string"
							},
							{
								"internalType": "string",
								"name": "vehicleType",
								"type": "string"
							},
							{
								"internalType": "string",
								"name": "color",
								"type": "string"
							},
							{
								"internalType": "int16",
								"name": "seatCapacity",
								"type": "int16"
							},
							{
								"internalType": "string",
								"name": "origin",
								"type": "string"
							},
							{
								"internalType": "string",
								"name": "licensePlate",
								"type": "string"
							},
							{
								"internalType": "string",
								"name": "engineNumber",
								"type": "string"
							},
							{
								"internalType": "string",
								"name": "chassisNumber",
								"type": "string"
							},
							{
								"internalType": "string",
								"name": "modelCode",
								"type": "string"
							},
							{
								"internalType": "int32",
								"name": "capacity",
								"type": "int32"
							},
							{
								"internalType": "uint256",
								"name": "firstRegistrationDate",
								"type": "uint256"
							}
						],
						"internalType": "struct VehicleProperties",
						"name": "_props",
						"type": "tuple"
					},
					{
						"internalType": "int32",
						"name": "_startingPrice",
						"type": "int32"
					},
					{
						"internalType": "string[]",
						"name": "_vehicleImages",
						"type": "string[]"
					}
				],
				"stateMutability": "nonpayable",
				"type": "constructor"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "previousOwner",
						"type": "address"
					}
				],
				"name": "OwnershipRenounced",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "previousOwner",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "newOwner",
						"type": "address"
					}
				],
				"name": "OwnershipTransferred",
				"type": "event"
			},
			{
				"inputs": [],
				"name": "getAuctionRounds",
				"outputs": [
					{
						"components": [
							{
								"internalType": "address",
								"name": "auctioneer",
								"type": "address"
							},
							{
								"internalType": "int32",
								"name": "auctionRoundPrice",
								"type": "int32"
							},
							{
								"internalType": "uint32",
								"name": "auctionRoundDate",
								"type": "uint32"
							}
						],
						"internalType": "struct Vehicle.AuctionRound[]",
						"name": "",
						"type": "tuple[]"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "getStartingPrice",
				"outputs": [
					{
						"internalType": "int32",
						"name": "",
						"type": "int32"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "getVehicleImages",
				"outputs": [
					{
						"internalType": "string[]",
						"name": "",
						"type": "string[]"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "getVehicleProperties",
				"outputs": [
					{
						"components": [
							{
								"internalType": "string",
								"name": "ownerFullName",
								"type": "string"
							},
							{
								"internalType": "string",
								"name": "ownerAddress",
								"type": "string"
							},
							{
								"internalType": "string",
								"name": "brand",
								"type": "string"
							},
							{
								"internalType": "string",
								"name": "vehicleType",
								"type": "string"
							},
							{
								"internalType": "string",
								"name": "color",
								"type": "string"
							},
							{
								"internalType": "int16",
								"name": "seatCapacity",
								"type": "int16"
							},
							{
								"internalType": "string",
								"name": "origin",
								"type": "string"
							},
							{
								"internalType": "string",
								"name": "licensePlate",
								"type": "string"
							},
							{
								"internalType": "string",
								"name": "engineNumber",
								"type": "string"
							},
							{
								"internalType": "string",
								"name": "chassisNumber",
								"type": "string"
							},
							{
								"internalType": "string",
								"name": "modelCode",
								"type": "string"
							},
							{
								"internalType": "int32",
								"name": "capacity",
								"type": "int32"
							},
							{
								"internalType": "uint256",
								"name": "firstRegistrationDate",
								"type": "uint256"
							}
						],
						"internalType": "struct VehicleProperties",
						"name": "",
						"type": "tuple"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "owner",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "renounceOwnership",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_newOwner",
						"type": "address"
					}
				],
				"name": "transferOwnership",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			}
		],
		"devdoc": {
			"kind": "dev",
			"methods": {
				"renounceOwnership()": {
					"details": "Allows the current owner to relinquish control of the contract."
				},
				"transferOwnership(address)": {
					"details": "Allows the current owner to transfer control of the contract to a newOwner.",
					"params": {
						"_newOwner": "The address to transfer ownership to."
					}
				}
			},
			"version": 1
		},
		"userdoc": {
			"kind": "user",
			"methods": {
				"renounceOwnership()": {
					"notice": "Renouncing to ownership will leave the contract without an owner. It will not be possible to call the functions with the `onlyOwner` modifier anymore."
				}
			},
			"version": 1
		}
	},
	"settings": {
		"compilationTarget": {
			"contracts/Vehicle.sol": "Vehicle"
		},
		"evmVersion": "paris",
		"libraries": {},
		"metadata": {
			"bytecodeHash": "ipfs"
		},
		"optimizer": {
			"enabled": false,
			"runs": 200
		},
		"remappings": []
	},
	"sources": {
		"contracts/Vehicle.sol": {
			"keccak256": "0x3c5fff5639c7a8175234c21767af1c0b2b58e23249bcb3bbf6c45ab82462c206",
			"license": "GPL-3.0",
			"urls": [
				"bzz-raw://4ceec408ac58b877188ad6a3cbb23094a5689c8a7d911c3615c4cc1440f9b1ad",
				"dweb:/ipfs/QmbA6jkQ9NVcoxeBLMubz2zwL4KygPnLMPsinAU9kHgN14"
			]
		},
		"hardhat/console.sol": {
			"keccak256": "0x7434453e6d3b7d0e5d0eb7846ffdbc27f0ccf3b163591263739b628074dc103a",
			"license": "MIT",
			"urls": [
				"bzz-raw://49355f780520494d1d5a0f01858385e51bb5280ce0ecfb960f16995065dca395",
				"dweb:/ipfs/QmSwJ6C5QLz6xKeQZS8wbwjU1KxRFTYfwbGmtzisd5sRW4"
			]
		},
		"zeppelin-solidity/contracts/ownership/Ownable.sol": {
			"keccak256": "0x87b5ab4db8a0ea4fbcddffb87a3e032bc840875a84e01e6723925617dabbdd53",
			"license": "GPL-3.0",
			"urls": [
				"bzz-raw://833d0d6e1284888bd79f23e733a83554b19022300715c7f1223979d50e17ab73",
				"dweb:/ipfs/QmbMbrUPtm5yydraggV5B3axCR2vj9sHJRB8CagM3zkyMz"
			]
		}
	},
	"version": 1
}